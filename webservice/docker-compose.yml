version: '3.4'

services:
  mysqlserver:
    image: mysql:latest
    restart: always
    container_name: mysqlserver
    hostname: mysqlserver
    environment:
      # Commentout this if you need docker-compose create default db
      # MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'SA'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'Passw0rd123!'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'Passw0rd123!'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - /d/mysql:/var/lib/mysql
      
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: on-failure
    container_name: sqlserver
    hostname: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Passw0rd123!
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Passw0rd123! -Q "select 1"
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "1434:1433"
    volumes:
      - /d/mssql:/var/opt/mssql/data
      
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    volumes:
      - /d/kafka/zk_logs:/var/lib/zookeeper/log
      - /d/kafka/zk_data:/var/lib/zookeeper/data
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker-1:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    container_name: broker-1
    hostname: broker-1
    depends_on:
      - zookeeper
    extra_hosts:
      - 'moby:127.0.0.1'
      - 'localhost: 127.0.0.1'  
    ports:
      - 9091:9091
      - 9092:9092
    volumes:
      - /d/kafka/kf_data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092,INTERNAL://broker-1:9091'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLED: 'false'
  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    restart: on-failure
    container_name: kafdrop
    hostname: kafdrop
    depends_on:
      - broker-1
    environment:
      - KAFKA_BROKERCONNECT=broker-1:9091
    ports:
      - 9000:9000